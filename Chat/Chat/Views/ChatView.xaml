<Window x:Class="Chat.Views.ChatView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chat.Views"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen" SizeChanged="Window_SizeChanged"
        Closed="Window_Closed"
        Title="N-Chat" Height="500" Width="900">
    <Window.Resources>
        <VisualBrush x:Key="CueBannerBrush" Stretch="None">
            <VisualBrush.Visual>
                <StackPanel Orientation="Horizontal">
                    <Image Source="../Images/search-icon.png" Width="20" Height="17" Opacity=".4" />
                    <Label Content="Search User" Foreground="LightGray" />
                </StackPanel>
            </VisualBrush.Visual>
        </VisualBrush>
        <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="Black"/>
        <Style x:Key="TransparentStyle"
               TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="#FF4C7DB2">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ParticipantsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ParticipantsDataTemplate">
            <Border BorderThickness="0,0,0,1"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="50" Margin="-2,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="ParticipantRct" Fill="{DynamicResource PrimaryHueMidBrush}"
                               Visibility="Hidden"/>
                    <!--Pic-->
                    <Grid Grid.Column="1" Margin="6" SnapsToDevicePixels="True">
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
                        </Grid.OpacityMask>
                        <Ellipse x:Name="ClipEllipse" Fill="White"/>
                        <Image Source="{Binding Photo}" Stretch="UniformToFill"/>
                    </Grid>
                    <!--Name-->
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
                               Text="{Binding Name}" SnapsToDevicePixels="True"/>

                    <!--New Message icon-->
                    <StackPanel Name="NewMessageIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                             VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Opacity="0.7" Visibility="Hidden">
                        <Image Source="{Binding Photo}" Stretch="UniformToFill"/>
                    </StackPanel>
                    <!--Typing icon-->
                    <StackPanel Name="TypingIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                             VerticalAlignment="Center" HorizontalAlignment="Center"
                                              Opacity="0.8" Visibility="Hidden">
                        <Image Source="{Binding Photo}" Stretch="UniformToFill"/>
                    </StackPanel>

                    <!--Online-->
                    <Ellipse Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" 
                             Width="8" Height="8">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="#64DD17"/>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding HasSentNewMessage}" Value="True">
                    <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsTyping}" Value="True">
                    <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="TypingIcon" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,
                    RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="true">
                    <Setter Property="Visibility" TargetName="ParticipantRct" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="MessagesDataTemplate">
            <Grid>
                <Grid x:Name="MessageGrid" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="FirstGrid" Width="45"/>
                        <ColumnDefinition x:Name="SecondGrid" Width="310"/>
                    </Grid.ColumnDefinitions>
                    <Border  x:Name="ChatUserImage" Grid.Column="0" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1"
                    CornerRadius="50"
                    Margin="5,-10,0,0"
                    Width="40"
                    Height="40">
                        <Ellipse Height="38" Width="38">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding ChatUserImage}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Border>
                    <Border Name="MessageBorder" Grid.Column="1" MinHeight="40" MinWidth="180"  MaxWidth="290" BorderThickness="1" Background="#EFEBE9" 
                    Margin="5,0,60,10" BorderBrush="#BCAAA4" CornerRadius="4" SnapsToDevicePixels="True"
                    HorizontalAlignment="Left">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="5"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="ImageMessageGrid" Margin="6,6,6,5">
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=ClipBorder}"/>
                                </Grid.OpacityMask>
                                <Border x:Name="ClipBorder" CornerRadius="3" Background="White"/>
                                <Image Stretch="UniformToFill" Cursor="Hand" 
                               ToolTip="Click to open image in your default image viewer"
                               Source="{Binding Picture}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction
                                        Command="{Binding DataContext.OpenImageCommand, 
                                        RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                            <Grid Grid.Row="0">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Stretch"
                               Margin="5,1,0,0" FontWeight="Bold"
                               Text="{Binding Author}"/>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Margin="0,2,5,0" FontSize="10" Opacity="0.8"
                               Text="{Binding Time, StringFormat={}{0:dd MMM yyyy HH MM tt}}"/>
                            </Grid>
                            <TextBlock x:Name="MessageTxtBlock" Grid.Row="1" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Message}"/>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOriginNative}" Value="True">
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10"/>
                    <Setter TargetName="MessageBorder" Property="Background" Value="#BBDEFB"/>
                    <Setter TargetName="MessageBorder" Property="BorderBrush" Value="#64B5F6"/>
                    <Setter TargetName="ChatUserImage" Property="Grid.Column" Value="1"/>
                    <Setter TargetName="MessageBorder" Property="Grid.Column" Value="0"/>
                    <Setter TargetName="FirstGrid" Property="Width" Value="310"/>
                    <Setter TargetName="SecondGrid" Property="Width" Value="45"/>
                    <Setter TargetName="MessageGrid" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="ChatUserImage" Property="Margin" Value="0,-10,5,0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Picture}" Value="{x:Null}">
                    <Setter TargetName="ImageMessageGrid" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                    <Setter TargetName="MessageTxtBlock" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Message}" Value="{x:Null}"/>
                        <Condition Binding="{Binding IsOriginNative}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10"/>
                        <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width = "200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height = "*" />
            <RowDefinition Height = "50" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="2" Grid.Column="0"
                    Orientation="Horizontal"
                    Background="#FF4C7DB2">
            <Border BorderBrush="White" BorderThickness="2"
                    CornerRadius="50"
                    Margin="5 0"
                    Padding="1 1"
                    Width="40"
                    Height="40">
                <Image x:Name="imgAvatar" 
                       Source="{Binding LogedUserPhoto}"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Width="32"
                       Height="32">
                </Image>
            </Border>
            <TextBlock Width="120"
                       Text="{Binding LoggedUserName}"
                       VerticalAlignment="Center"
                       Foreground="White"
                       FontSize="12"
                       Margin="2 0">
            </TextBlock>
            <Button Width="20"
                    Height="20" 
                    Background="Transparent" 
                    BorderBrush="Transparent" 
                    BorderThickness="0"
                    Cursor="Hand" Command="{Binding LogoutCommand}">
                <StackPanel>
                    <Image Source="../Images/sign-out.png"
                           RenderOptions.BitmapScalingMode="HighQuality">
                    </Image>
                </StackPanel>
            </Button>
        </StackPanel>
        <DockPanel Grid.Row="1" Grid.Column="1" Background="#f2f2f2">
            <Button x:Name="btnSend"
                    DockPanel.Dock="Right"
                    Style="{StaticResource TransparentStyle}"
                    Cursor="Hand"
                    HorizontalAlignment="Right"
                    Background="#f2f2f2"
                    Width="45"
                    Height="50">
                <Image Source="../Images/send.png" Width="25" Height="28"></Image>
            </Button>
            <TextBox x:Name="txtMessage" Background="#f2f2f2"
                     Foreground="#555"
                     BorderBrush="#FF4C7DB2"
                     BorderThickness="0 1 0 0"
                     Tag="What's on your mind?"
                     VerticalContentAlignment="Center"
                     FontSize="14"
                     Padding="10 0" >

            </TextBox>
        </DockPanel>
        <Border BorderBrush="#FF4C7DB2" BorderThickness="2">
            <StackPanel Grid.Row="0" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height = "32" />
                        <RowDefinition Height = "30" />
                        <RowDefinition Height = "100*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Background="#FF4C7DB2">
                        <Label Content="Online Users" Width="190" FontFamily="Viner Hand ITC"
                         Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                         FontSize="20"/>
                    </StackPanel>
                    <Grid Grid.Row="1">
                        <TextBox Tag="Search User" Style="{StaticResource TextBox}" Height="25" Margin="5,1,5,1" />
                    </Grid>
                    <StackPanel Grid.Row="2">
                        <ListBox ItemsSource="{Binding OnlineUsers}" 
                                 ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
                                 ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                                 SelectedItem="{Binding SelectedOnlineUser, UpdateSourceTrigger=PropertyChanged}"
                                 MaxHeight="{Binding LiistBoxHeight, UpdateSourceTrigger=PropertyChanged}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ListBoxUserSelected}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>
        <StackPanel Grid.Row="0" Grid.Column="1" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height = "35" />
                    <RowDefinition Height = "50" />
                    <RowDefinition Height = "*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="#FF4C7DB2">
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <Image Source="../Images/N_Chat.png"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Width="32"
                               Height="32">
                        </Image>
                        <Label Content="N~Chat" FontFamily="Viner Hand ITC" 
                         Foreground="White" HorizontalAlignment="Stretch"
                         FontSize="20"/>
                    </StackPanel>
                </Grid>
                <StackPanel Grid.Row="1"  Orientation="Horizontal" Background="WhiteSmoke" Visibility="{Binding IsUserSelected}" d:Visibility="Collapsed">
                    <Border BorderBrush="#FF4C7DB2" BorderThickness="1"
                            CornerRadius="50"
                            Margin="5 1 1 1"
                            Padding="1 1"
                            Width="40"
                            Height="40">
                        <Image
                                    Source="{Binding SelectedUserPhoto}"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Width="32"
                                    Height="32">
                        </Image>
                    </Border>
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Width="120" Text="{Binding SelectedUser}" VerticalAlignment="Center" Foreground="#FF4C7DB2" FontSize="14" Margin="4 0"/>
                        <WrapPanel>
                            <Ellipse VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4 1 2 0"
                             Width="6" Height="6">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="#64DD17"/>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <TextBlock Text="Online" VerticalAlignment="Center" Foreground="SlateGray" FontSize="10" Margin="0 0"/>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="2">
                    <ItemsControl x:Name="MessagesItemsCtrl" Grid.Column="1" Margin="0,5,0,0" 
                      ItemsSource="{Binding OnlineUsers.UserChats}" 
                      ItemTemplate="{DynamicResource MessagesDataTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                    </ItemsControl>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
